{"version":3,"sources":["scripts.js"],"names":["document","addEventListener","dateFormat","months","Array","d","Date","dateNow","getDate","monthNow","getMonth","yearNow","getFullYear","getElementById","event","findCurrentPrice","console","log","currentPriceXHR","onreadystatechange","this","readyState","status","currentPrice","JSON","parse","responseText","oldPrice","quantity","amount","parseInt","currentValue","parseFloat","answer","innerHTML","toFixed","replace","open","currentPriceURL","send","preventDefault","date","value","unixtime","oldPriceURL","oldPriceXHR","XMLHttpRequest","setTimeout","asOf"],"mappings":"AAAAA,SAAAC,iBAAA,mBAAA,WAsEA,SAAAC,IACA,IAAAC,EAAA,IAAAC,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OAAA,MAAA,MAAA,OACAC,EAAA,IAAAC,KACAC,EAAAF,EAAAG,UACAC,EAAAJ,EAAAK,WACAC,EAAAN,EAAAO,cACA,OAAAT,EAAAM,GAAA,IAAAF,EAAA,KAAAI,EA3EAX,SAAAa,eAAA,aAAAZ,iBAAA,QAAA,SAAAa,GAuCA,SAAAC,IACAC,QAAAC,IAAA,oBACAC,EAAAC,mBAAA,WACA,GAAAC,KAAAC,YAAA,KAAAD,KAAAE,SACAC,EAAAC,KAAAC,MAAAL,KAAAM,cAGAV,QAAAC,IAAA,gBAAAU,EAAA,IAAA,KACAC,EAAAC,EAAAC,SAAAH,EAAA,IAAA,KACAX,QAAAC,IAAAY,EAAA,UAEAE,EAAAC,WAAAT,EAAA,KAAAK,EAEAK,OAAAC,UAAA,eAAAH,EAAAI,QAAA,GAAAC,QAAA,sBAAA,SAQAlB,EAAAmB,KAAA,MAAAC,GAAA,GACApB,EAAAqB,OA5DAzB,EAAA0B,iBACAxB,QAAAC,IAAA,WACA,IAAAwB,EAAAzC,SAAAa,eAAA,SAAA6B,MAAA,IAAA1C,SAAAa,eAAA,OAAA6B,MAAA,KAAA1C,SAAAa,eAAA,QAAA6B,MACA1B,QAAAC,IAAAwB,GACA,IAAAE,EAAArC,KAAAmB,MAAAgB,GAAA,IACAzB,QAAAC,IAAA0B,GACA,IAYApB,EACAI,EACAI,EACAH,EAfAC,EAAAC,SAAA9B,SAAAa,eAAA,UAAA6B,OAQAE,EAAA,gFAAAD,EACAE,EAAA,IAAAC,eACA5B,EAAA,IAAA4B,eACAR,EAAA,kEAOAO,EAAA1B,mBAAA,WACA,GAAA,GAAAC,KAAAC,YAAA,KAAAD,KAAAE,OAAA,CACAyB,WAAAhC,IAAA,KACAY,EAAAH,KAAAC,MAAAL,KAAAM,cACA1B,SAAAa,eAAA,UAAA,IACAmC,EAAA,SAAA9C,IACAF,SAAAa,eAAA,QAAAqB,UAAAc,IAKAH,EAAAR,KAAA,MAAAO,GAAA,GACAC,EAAAN,WA0CA","file":"scripts.min.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function(){\n\tdocument.getElementById(\"calculate\").addEventListener(\"click\", function(event){\n\t\tevent.preventDefault();\n\t\tconsole.log(\"hello !\");\n\t\tvar date = document.getElementById('month').value + \" \" + document.getElementById('day').value +\", \" + document.getElementById('year').value;\n\t\tconsole.log(date);\n\t\tvar unixtime = Date.parse(date)/1000;\n\t\tconsole.log(unixtime);\n\t\tvar amount = parseInt(document.getElementById('amount').value);\n\n\n\t\t// var oldPrice = ajax on \"https://min-api.cryptocompare.com/data/pricehistorical?fsym=BTC&tsyms=USD&ts=\"+unixtime\n\t\t// var currentPrice = ajax on \"https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD\"\n\t\t// var quantity = amount / oldPrice\n\t\t// var currentValue = quantity * currentPrice\n\n\t\tvar oldPriceURL = \"https://min-api.cryptocompare.com/data/pricehistorical?fsym=BTC&tsyms=USD&ts=\"+unixtime;\n\t\tvar oldPriceXHR = new XMLHttpRequest();\n\t\tvar currentPriceXHR = new XMLHttpRequest();\n\t\tvar currentPriceURL = \"https://min-api.cryptocompare.com/data/price?fsym=BTC&tsyms=USD\";\n\t\tvar currentPrice;\n\t\tvar oldPrice;\n\t\tvar currentValue;\n\t\tvar quantity;\n\n\n\t  \toldPriceXHR.onreadystatechange = function() {\n\t\t    if (this.readyState == 4 && this.status == 200) {\n\t\t    \tsetTimeout(findCurrentPrice(), 5000);\n\t\t\t    oldPrice = JSON.parse(this.responseText);\n\t\t\t    var answer = document.getElementById(\"answer\");\n\t\t\t    var asOf = \"As of \"+dateFormat();\n\t\t\t    document.getElementById(\"asOf\").innerHTML = asOf;\n\n\n\t\t    }\n\t\t};\n\t\toldPriceXHR.open(\"GET\", oldPriceURL, true);\n\t\toldPriceXHR.send();\n\n\t\tfunction findCurrentPrice(){\n\t\t\tconsole.log(\"this was delayed\");\n\t\t\tcurrentPriceXHR.onreadystatechange = function() {\n\t\t    if (this.readyState == 4 && this.status == 200) {\n\t\t\t    currentPrice = JSON.parse(this.responseText);\n\t\t\t    //console.log(\"currentPrice coming\");\n\t\t\t    //console.log(currentPrice);\n\t\t\t    console.log(\"old Price is \"+oldPrice[\"BTC\"][\"USD\"]);\n\t\t\t    quantity = amount / parseInt(oldPrice[\"BTC\"][\"USD\"]);\n\t\t\t    console.log(amount,\"amount\");\n\n\t\t\t    currentValue = parseFloat(currentPrice[\"USD\"]) * quantity;\n\n\t\t\t    answer.innerHTML = \"You'd have $\"+currentValue.toFixed(2).replace(/(\\d)(?=(\\d{3})+\\.)/g, '$1,');\n;\n\t\t\t    //currentPrice[\"USD\"]+\" old price is \"+oldPrice[\"BTC\"][\"USD\"];\n\t\t\t    /*setTimeout(function(){\n\n\t\t\t    } , 5000);*/\n\t\t    }\n\t\t\t};\n\t\t\tcurrentPriceXHR.open(\"GET\", currentPriceURL, true);\n\t\t\tcurrentPriceXHR.send();\n\t\t}\n\n\n\n\t});\n\n\n\tfunction dateFormat() {\n\t\tvar months = new Array(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\");\n\t\tvar d = new Date();\n\t\tvar dateNow = d.getDate();\n\t\tvar monthNow = d.getMonth();\n\t\tvar yearNow = d.getFullYear();\n\t\treturn months[monthNow] +\" \"+ dateNow + \", \" + yearNow;\n\t}\n\n// end fake document ready\n}, false);\n\n\n"]}